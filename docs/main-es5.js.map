{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/top-bar/top-bar.component.ts","webpack:///src/app/top-bar/top-bar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","path","component","register","enabled","production","declarations","providers","bootstrap","ProductListComponent","http","datePipe","styles","value","viewValue","selected","getJSON","subscribe","data","employee","agora","Date","products","sort","a","b","order","forEach","p","date","datetime","iniciado","getMinutes","time","getHours","get","transform","TopBarComponent","environment","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,cAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACPzB;;AAEA;;AACE;;AACF;;;;;;;;;sEDGaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA2CaC,S;;;;;YAAAA,S;AAAS,kBAFN,2DAEM;;;;yBAATA,S;AAAS,O;AAAA,iBALP,CACP,yDADO,C;AAEV,gBAhBQ,CACL,uEADK,EAEL,oEAFK,EAGL,6DAAaP,OAAb,CAAqB,CACjB;AAACQ,YAAI,EAAE,EAAP;AAAWC,iBAAS,EAAE;AAAtB,OADiB,CAArB,CAHK,EAML,4FANK,EAOL,4EAAoBC,QAApB,CAA6B,gBAA7B,EAA+C;AAACC,eAAO,EAAE,sEAAYC;AAAtB,OAA/C,CAPK,EAQL,yEARK,EASL,gFATK,EAUL,uEAVK,EAWL,sEAXK,EAYL,oFAZK,CAgBR;;;;0HAGQL,S,EAAS;AAAA,uBAvBd,2DAuBc,EAtBd,0EAsBc,EArBd,yFAqBc;AArBM,kBAGpB,uEAHoB,EAIpB,oEAJoB,EAIJ,4DAJI,EAQpB,4FARoB,EAQG,2EARH,EAUpB,yEAVoB,EAWpB,gFAXoB,EAYpB,uEAZoB,EAapB,sEAboB,EAcpB,oFAdoB;AAqBN,O;AAPM,K;;;;;sEAOfA,S,EAAS;cAzBrB,sDAyBqB;eAzBZ;AACNM,sBAAY,EAAE,CACV,2DADU,EAEV,0EAFU,EAGV,yFAHU,CADR;AAMNZ,iBAAO,EAAE,CACL,uEADK,EAEL,oEAFK,EAGL,6DAAaD,OAAb,CAAqB,CACjB;AAACQ,gBAAI,EAAE,EAAP;AAAWC,qBAAS,EAAE;AAAtB,WADiB,CAArB,CAHK,EAML,4FANK,EAOL,4EAAoBC,QAApB,CAA6B,gBAA7B,EAA+C;AAACC,mBAAO,EAAE,sEAAYC;AAAtB,WAA/C,CAPK,EAQL,yEARK,EASL,gFATK,EAUL,uEAVK,EAWL,sEAXK,EAYL,oFAZK,CANH;AAoBNE,mBAAS,EAAE,CACP,yDADO,CApBL;AAuBNC,mBAAS,EAAE,CAAC,2DAAD;AAvBL,S;AAyBY,Q;;;;;;;;;;;;;;;;;;AC3CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;AACI;;AACJ;;;;;;AAFsC;;AAClC;;AAAA;;;;;;AAgBR;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAVR;;AACI;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AAEA;;AAAK;;AAAqC;;AAC1C;;AAGA;;AACJ;;;;;;;;AAVW;;AAAA,yGAAoC,MAApC,EAAoC,8EAApC,EAAoC,2DAApC;;AACC;;AAAA;;AAIH;;AAAA;;AACF;;AAAA;;;;;;AAVX;;AACI;;AAcJ;;;;;;;;AAdS;;AAAA;;;;QDEIC,oB;AAqBT,oCAAoBC,IAApB,EAA8CC,QAA9C,EAAkE;AAAA;;AAAA;;AAA9C,aAAAD,IAAA,GAAAA,IAAA;AAA0B,aAAAC,QAAA,GAAAA,QAAA;AApB9C,aAAAC,MAAA,GAAkB,CACd;AAACC,eAAK,EAAE,EAAR;AAAYC,mBAAS,EAAE;AAAvB,SADc,EAEd;AAACD,eAAK,EAAE,KAAR;AAAeC,mBAAS,EAAE;AAA1B,SAFc,EAGd;AAACD,eAAK,EAAE,IAAR;AAAcC,mBAAS,EAAE;AAAzB,SAHc,EAId;AAACD,eAAK,EAAE,OAAR;AAAiBC,mBAAS,EAAE;AAA5B,SAJc,EAKd;AAACD,eAAK,EAAE,MAAR;AAAgBC,mBAAS,EAAE;AAA3B,SALc,EAMd;AAACD,eAAK,EAAE,QAAR;AAAkBC,mBAAS,EAAE;AAA7B,SANc,EAOd;AAACD,eAAK,EAAE,KAAR;AAAeC,mBAAS,EAAE;AAA1B,SAPc,EAQd;AAACD,eAAK,EAAE,QAAR;AAAkBC,mBAAS,EAAE;AAA7B,SARc,EASd;AAACD,eAAK,EAAE,KAAR;AAAeC,mBAAS,EAAE;AAA1B,SATc,EAUd;AAACD,eAAK,EAAE,KAAR;AAAeC,mBAAS,EAAE;AAA1B,SAVc,EAWd;AAACD,eAAK,EAAE,QAAR;AAAkBC,mBAAS,EAAE;AAA7B,SAXc,EAYd;AAACD,eAAK,EAAE,MAAR;AAAgBC,mBAAS,EAAE;AAA3B,SAZc,EAad;AAACD,eAAK,EAAE,cAAR;AAAwBC,mBAAS,EAAE;AAAnC,SAbc,EAcd;AAACD,eAAK,EAAE,WAAR;AAAqBC,mBAAS,EAAC;AAA/B,SAdc,CAAlB;AAgBA,aAAAC,QAAA,GAAW,EAAX;AAKI,aAAKC,OAAL,GAAeC,SAAf,CAAyB,UAAAC,IAAI,EAAI;AAC7B,cAAIC,QAAQ,GAAGD,IAAf;AACA,cAAIE,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,eAAI,CAACC,QAAL,GAAgBH,QAAQ,CAACI,IAAT,CAAc,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACpC,mBAAOD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAnB;AACH,WAFe,CAAhB,CAH6B,CAO7B;AACA;AACA;AACA;AACA;;AACA,eAAI,CAACJ,QAAL,CAAcK,OAAd,CAAsB,UAAAC,CAAC,EAAI;AACvB,gBAAIC,IAAI,GAAG,IAAIR,IAAJ,CAASO,CAAC,CAACE,QAAX,CAAX;AACAF,aAAC,CAACG,QAAF,GAAaX,KAAK,GAAGS,IAArB;;AACA,gBAAIA,IAAI,CAACG,UAAL,MAAqB,CAAzB,EAA4B;AACxBJ,eAAC,CAACK,IAAF,GAASJ,IAAI,CAACK,QAAL,KAAkB,GAA3B;AACH,aAFD,MAEO;AACHN,eAAC,CAACK,IAAF,GAASJ,IAAI,CAACK,QAAL,KAAkB,GAAlB,GAAwBL,IAAI,CAACG,UAAL,EAAxB,GAA4C,GAArD;AACH;AACJ,WARD;AASH,SArBD;AAsBH;;;;kCAEa;AACV,iBAAO,KAAKtB,IAAL,CAAUyB,GAAV,CAAc,gCAAd,CAAP;AACH;;;sCAEaN,I,EAAI;AACd,iBAAO,KAAKlB,QAAL,CAAcyB,SAAd,CAAwB,IAAIf,IAAJ,CAASQ,IAAT,CAAxB,EAAwC,kBAAxC,CAAP,CADc,CACsD;AACvE;;;;;;;uBApDQpB,oB,EAAoB,gI,EAAA,yH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,8K;AAAA;AAAA;ACfjC;;AACA;;AACI;;AACI;;AAAW;;AAAc;;AACzB;;AAAY;AAAA;AAAA;;AACR;;AAGJ;;AACJ;;AAEJ;;AACA;;;;AARoB;;AAAA;;AACI;;AAAA;;AAOnB;;AAAA;;;;;;;;;sEDGQA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACPZ,kBAAQ,EAAE,kBADH;AAEPC,qBAAW,EAAE,+BAFN;AAGPC,mBAAS,EAAE,CAAC,8BAAD;AAHJ,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEfjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;QAOasC,e;AACX,iCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBAJUA,e;AAAe,K;;;YAAfA,e;AAAe,kC;AAAA,c;AAAA,a;AAAA,iC;AAAA;AAAA;ACP5B;;AACE;;AAAI;;AAAuB;;AAC7B;;;;AAFG;;;;;;;;;sEDOUA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTxC,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMuC,WAAW,GAAG;AACzBjC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBkC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lives-brasil';\n}\n","<app-top-bar></app-top-bar>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {TopBarComponent} from \"./top-bar/top-bar.component\";\nimport {ProductListComponent} from \"./product-list/product-list.component\";\nimport {RouterModule} from \"@angular/router\";\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ServiceWorkerModule} from '@angular/service-worker';\nimport {environment} from '../environments/environment';\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {DatePipe} from \"@angular/common\";\nimport {MatSlideToggleModule} from \"@angular/material/slide-toggle\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        TopBarComponent,\n        ProductListComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        RouterModule.forRoot([\n            {path: '', component: ProductListComponent},\n        ]),\n        BrowserAnimationsModule,\n        ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production}),\n        MatSelectModule,\n        MatFormFieldModule,\n        MatInputModule,\n        HttpClientModule,\n        MatSlideToggleModule,\n    ],\n    providers: [\n        DatePipe\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from \"rxjs\";\r\nimport {DatePipe} from \"@angular/common\";\r\n\r\ninterface Style {\r\n    value: string;\r\n    viewValue: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-product-list',\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent {\r\n    styles: Style[] = [\r\n        {value: '', viewValue: 'Todos'},\r\n        {value: 'axe', viewValue: 'axe'},\r\n        {value: 'dj', viewValue: 'dj'},\r\n        {value: 'forro', viewValue: 'forro'},\r\n        {value: 'funk', viewValue: 'funk'},\r\n        {value: 'gospel', viewValue: 'gospel'},\r\n        {value: 'mpb', viewValue: 'mpb'},\r\n        {value: 'outros', viewValue: 'outros'},\r\n        {value: 'pop', viewValue: 'pop'},\r\n        {value: 'rap', viewValue: 'rap'},\r\n        {value: 'reggae', viewValue: 'reggae'},\r\n        {value: 'rock', viewValue: 'rock'},\r\n        {value: 'samba-pagode', viewValue: 'samba/pagode'},\r\n        {value: 'sertanejo', viewValue:'sertanejo'},\r\n    ];\r\n    selected = '';\r\n\r\n    products;\r\n\r\n    constructor(private http: HttpClient, private datePipe: DatePipe) {\r\n        this.getJSON().subscribe(data => {\r\n            let employee = data;\r\n            let agora = new Date();\r\n            this.products = employee.sort((a, b) => {\r\n                return a.order - b.order;\r\n            });\r\n\r\n            // this.products = this.products.filter(p => {\r\n            //     let date = new Date(p.date);\r\n            //     date.setHours(date.getHours() + 8);\r\n            //     return date >= agora;\r\n            // });\r\n            this.products.forEach(p => {\r\n                let date = new Date(p.datetime);\r\n                p.iniciado = agora > date;\r\n                if (date.getMinutes() == 0) {\r\n                    p.time = date.getHours() + \"h\";\r\n                } else {\r\n                    p.time = date.getHours() + \":\" + date.getMinutes() + \"h\";\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    public getJSON(): Observable<any> {\r\n        return this.http.get('https://api.lives.mus.br/lives');\r\n    }\r\n\r\n    transformDate(date): string {\r\n        return this.datePipe.transform(new Date(date), 'dd/MM/yyyy HH:mm'); //whatever format you need.\r\n    }\r\n\r\n}\r\n","<br/>\n<div>\n    <mat-form-field>\n        <mat-label>Estilo musical</mat-label>\n        <mat-select [(value)]=\"selected\">\n            <mat-option *ngFor=\"let st of styles\" [value]=\"st.value\">\n                {{st.viewValue}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <!--    <mat-slide-toggle [checked]=\"apenasProximas\">Apenas próximas</mat-slide-toggle>-->\n</div>\n<div *ngFor=\"let product of products\">\n    <div *ngIf=\"!selected || (product.categories && product.categories[0] && product.categories[0].key == selected)\">\n        <br/>\n        <h3>\n            <a [title]=\"product.title + ' details'\" [href]=\"product.youtube_channel ?product.youtube_channel: product.instagram\" target=\"_blank\">\n                {{ product.title }} - {{ product.time }} {{product.iniciado ? ' [Em andamento]' : ''}}\n            </a>\n        </h3>\n\n        <div>{{ transformDate(product.datetime) }}</div>\n        <p *ngIf=\"product.artists\">\n            {{ product.artists }}\n        </p>\n        <br/>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.css']\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","<a [routerLink]=\"['/']\">\r\n  <h1>Lives Quarentena Brasil</h1>\r\n</a>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}